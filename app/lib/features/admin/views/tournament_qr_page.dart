import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:go_router/go_router.dart';
import 'package:qr_flutter/qr_flutter.dart';

class TournamentQrPage extends StatelessWidget {
  final String tournamentId;
  final String tournamentName;

  const TournamentQrPage({
    super.key,
    required this.tournamentId,
    required this.tournamentName,
  });

  @override
  Widget build(BuildContext context) {
    // „É≠„Éº„Ç´„É´ÈñãÁô∫Áî®URL - localhost‰ΩøÁî®ÔºàÂ§ñÈÉ®IP„ÅØFlutterÈñãÁô∫„Çµ„Éº„Éê„Éº„Åß„Ç¢„ÇØ„Çª„Çπ‰∏çÂèØÔºâ
    final joinUrl = 'http://localhost:3000/#/player/join/$tournamentId';

    return Scaffold(
      appBar: AppBar(
        title: const Text('Â§ß‰ºöQR„Ç≥„Éº„Éâ'),
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          onPressed: () => context.pop(),
        ),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Card(
              child: Padding(
                padding: const EdgeInsets.all(24.0),
                child: Column(
                  children: [
                    Text(
                      tournamentName,
                      style: const TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 16),
                    Text(
                      'Â§ß‰ºöID: $tournamentId',
                      style: const TextStyle(
                        fontSize: 14,
                        color: Colors.grey,
                      ),
                    ),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 24),
            Card(
              child: Padding(
                padding: const EdgeInsets.all(24.0),
                child: Column(
                  children: [
                    const Text(
                      '„Éó„É¨„Ç§„É§„ÉºÂèÇÂä†Áî®QR„Ç≥„Éº„Éâ',
                      style: TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    const SizedBox(height: 16),
                    Center(
                      child: QrImageView(
                        data: joinUrl,
                        version: QrVersions.auto,
                        size: 200.0,
                        backgroundColor: Colors.white,
                      ),
                    ),
                    const SizedBox(height: 16),
                    const Text(
                      '„Éó„É¨„Ç§„É§„Éº„ÅØ„Åì„ÅÆQR„Ç≥„Éº„Éâ„Çí\n„Çπ„Éû„Éº„Éà„Éï„Ç©„É≥„ÅßË™≠„ÅøÂèñ„Å£„Å¶ÂèÇÂä†„Åß„Åç„Åæ„Åô\n\n‚ö†Ô∏è ÈñãÁô∫Áí∞Â¢É„ÅÆ„Åü„ÇÅ„ÄÅPC„Éñ„É©„Ç¶„Ç∂„Åß„ÅÆ„ÉÜ„Çπ„ÉàÁî®„Åß„Åô',
                      style: TextStyle(
                        fontSize: 14,
                        color: Colors.grey,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 16),
                    Container(
                      padding: const EdgeInsets.all(12),
                      decoration: BoxDecoration(
                        color: Colors.yellow.shade100,
                        border: Border.all(color: Colors.orange),
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Column(
                        children: [
                          const Text(
                            'üîç „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±',
                            style: TextStyle(
                              fontSize: 12,
                              fontWeight: FontWeight.bold,
                              color: Colors.orange,
                            ),
                          ),
                          const SizedBox(height: 8),
                          SelectableText(
                            'QR„Ç≥„Éº„ÉâÁîüÊàêURL:\n$joinUrl',
                            style: const TextStyle(
                              fontSize: 10,
                              fontFamily: 'monospace',
                              color: Colors.black87,
                            ),
                            textAlign: TextAlign.center,
                          ),
                          const SizedBox(height: 8),
                          ElevatedButton.icon(
                            onPressed: () async {
                              // „ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº
                              await Clipboard.setData(ClipboardData(text: joinUrl));
                              if (context.mounted) {
                                ScaffoldMessenger.of(context).showSnackBar(
                                  const SnackBar(
                                    content: Text('URL„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„ÅüÔºÅ'),
                                    duration: Duration(seconds: 2),
                                  ),
                                );
                              }
                            },
                            icon: const Icon(Icons.copy, size: 16),
                            label: const Text('URL„Ç≥„Éî„Éº'),
                            style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.orange,
                              foregroundColor: Colors.white,
                              padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
                              textStyle: const TextStyle(fontSize: 12),
                            ),
                          ),
                          const SizedBox(height: 4),
                          Text(
                            'ÊñáÂ≠óÊï∞: ${joinUrl.length}',
                            style: const TextStyle(
                              fontSize: 10,
                              color: Colors.grey,
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 24),
            Card(
              child: Padding(
                padding: const EdgeInsets.all(24.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      'ÂèÇÂä†ÊñπÊ≥ï',
                      style: TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    const SizedBox(height: 12),
                    const Text('1. „Éó„É¨„Ç§„É§„Éº„ÅÆ„Çπ„Éû„Éõ„ÇíÂêå„ÅòWi-Fi„Å´Êé•Á∂ö'),
                    const Text('2. „Éó„É¨„Ç§„É§„Éº„Å´QR„Ç≥„Éº„Éâ„ÇíË¶ã„Åõ„Çã'),
                    const Text('3. „Çπ„Éû„Éõ„ÅÆ„Ç´„É°„É©„ÅßQR„Ç≥„Éº„Éâ„ÇíË™≠„ÅøÂèñ„Çã'),
                    const Text('4. ÂèÇÂä†ËÄÖÂêç„ÇíÂÖ•Âäõ„Åó„Å¶„ÇÇ„Çâ„ÅÜ'),
                    const Text('5. ÂèÇÂä†ÁôªÈå≤ÂÆå‰∫Ü'),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 24),
            ElevatedButton.icon(
              onPressed: () {
                context.push('/admin/tournament/$tournamentId/matches');
              },
              icon: const Icon(Icons.table_chart),
              label: const Text('ÂØæÊà¶Ë°®„ÇíÁ¢∫Ë™ç'),
              style: ElevatedButton.styleFrom(
                padding: const EdgeInsets.symmetric(vertical: 16),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
